---
import { Icon } from 'astro-icon/components';
import { services } from "../config/services";

interface Props {
  sectionTitle?: string;
  sectionSubtitle?: string;
  showAllServices?: boolean;
  limit?: number;
}

const {
  sectionTitle = "Our Services",
  sectionSubtitle = "We offer comprehensive solutions to help your business thrive in today's competitive market.",
  showAllServices = true,
  limit = 6
} = Astro.props;

// Limit services if necessary
const displayedServices = showAllServices ? services : services.slice(0, limit);
---

<section class="py-24 px-8 bg-white">
  <div class="max-w-7xl mx-auto">
    <!-- Section header -->
    <div class="text-center mb-20 feature-header">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">{sectionTitle}</h2>
      <p class="max-w-2xl mx-auto text-lg text-gray-600">{sectionSubtitle}</p>
    </div>
    
    <!-- Services grid -->
    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
      {displayedServices.map((service, index) => (
        <div class="service-card p-8 rounded-xl bg-white border border-gray-100 shadow-sm hover:shadow-md transition-all duration-300" data-index={index}>
          <div class="icon-container mb-5 inline-flex items-center justify-center w-12 h-12 rounded-lg bg-indigo-100 text-indigo-600">
            <Icon name={service.icon} class="h-6 w-6" />
          </div>
          <h3 class="text-xl font-semibold text-gray-900 mb-3">{service.title}</h3>
          <p class="text-gray-600">{service.description}</p>
          {service.link && (
            <div class="mt-4">
              <a href={service.link} class="text-indigo-600 hover:text-indigo-800 font-medium inline-flex items-center">
                Learn more
                <Icon name="mdi:arrow-right" class="ml-1 h-4 w-4" />
              </a>
            </div>
          )}
        </div>
      ))}
    </div>

    {!showAllServices && services.length > limit && (
      <div class="text-center mt-12">
        <a 
          href="/services" 
          class="inline-flex items-center justify-center h-12 px-6 font-medium rounded-md bg-indigo-600 text-white hover:bg-indigo-700 transition-colors"
        >
          View All Services
        </a>
      </div>
    )}
  </div>
</section>

<style>
  /* Animation for section header */
  .feature-header {
    opacity: 0;
    animation: fadeInUp 0.8s ease-out forwards;
    animation-play-state: paused;
  }
  
  /* Animation for service cards */
  .service-card {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.5s ease-out forwards;
    animation-play-state: paused;
  }
  
  /* Stagger the animations based on index */
  .service-card[data-index="0"] { animation-delay: 0.1s; }
  .service-card[data-index="1"] { animation-delay: 0.2s; }
  .service-card[data-index="2"] { animation-delay: 0.3s; }
  .service-card[data-index="3"] { animation-delay: 0.4s; }
  .service-card[data-index="4"] { animation-delay: 0.5s; }
  .service-card[data-index="5"] { animation-delay: 0.6s; }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Icon hover animation */
  .icon-container {
    transition: transform 0.3s ease;
  }
  
  .service-card:hover .icon-container {
    transform: scale(1.1);
  }
</style>

<script>
  // Intersection Observer to trigger animations when elements enter viewport
  document.addEventListener('DOMContentLoaded', () => {
    const animatedElements = document.querySelectorAll('.feature-header, .service-card');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          (entry.target as HTMLElement).style.animationPlayState = 'running';
          // Unobserve after triggering animation
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1
    });
    
    animatedElements.forEach(element => {
      observer.observe(element);
    });
  });
</script>